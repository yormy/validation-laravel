name: Testing

on: [push]

jobs:
  unit-test:
    name: Unit testing
    runs-on: ubuntu-latest
    services:
      mysql:
        image: mysql:8.0
        env:
          # The MySQL docker container requires these environment variables to be set
          # so we can create and migrate the test database.
          # See: https://hub.docker.com/_/mysql
          MYSQL_DATABASE: testdb
          MYSQL_ROOT_PASSWORD: testrootpass
        ports:
          # Opens port 3306 on service container and host
          # https://docs.github.com/en/actions/using-containerized-services/about-service-containers
          - 3306:3306
          # Before continuing, verify the mysql container is reachable from the ubuntu host
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Cache Composer dependencies
        uses: actions/cache@v3
        with:
          path: /tmp/composer-cache
          key: ${{ runner.os }}-${{ hashFiles('composer.lock') }}

      - name: Installing dependencies
        uses: php-actions/composer@v6
        with:
          php_version: 8.2
          php_extensions: "json zip sodium pcntl bcmath"

      - name: Running unit test
        uses: php-actions/phpunit@v3
        with:
          version: 10.5.13
          php_version: 8.2
          php_extensions: "json zip sodium pcntl bcmath xdebug pcov"
          args: "-d date.timezone=Asia/Jakarta"
          memory_limit: 300M
          configuration: phpunit.xml
          coverage_clover: "./coverage/clover.xml"

#      - name: Ensure coverage > 70
#        id: test-coverage
#        uses: johanvanhelden/gha-clover-test-coverage-check@v1
#        with:
#          percentage: "70"
#          filename: "./coverage/clover.xml"
#
#      - name: Generate the badge SVG image
#        uses: emibcn/badge-action@v1
#        id: badge
#        with:
#          label: 'Coverage'
#          status: ${{ steps.coverage.outputs.coverage }}
#          path: ./badges/test-coverage.svg
#          color: ${{ steps.coverage.outputs.coveragelines > 70 && 'green' || 'red' }}
